[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sfeir-hivemind"
description = 'Sfeir Hivemind'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "William Phetsinorath", email = "william.phtesinorath@shikanime.studio" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "bentoml>=1.0,<2",
  "docker<7,>=6.1.3",
  "deeplake<4,>=3.6.4",
  "google-api-core<3,>=2.11.1",
  "google-api-python-client<3,>=2.88",
  "google-auth-httplib2<1,>=0.1",
  "google-auth-oauthlib<2,>=1.0",
  "google-cloud-aiplatform<2.0,>=1.25.0",
  "google-cloud-core<3,>=2.3.2",
  "langchain[llms]<0.1,>=0.0.190",
  "pillow<10,>=9.5",
  "protobuf<4,>=3.20.3",
  "pypdf2<4,>=3.0",
  "sentence-transformers<3,>=2.2",
  "transformers<5,>=4.29",
]
dynamic = ["version"]

[project.optional-dependencies]
jupyter = ["IProgress", "ipywidgets", "ipykernel"]

[project.urls]
Documentation = "https://github.com/infinity-blackhole/python-root-commit#readme"
Issues = "https://github.com/infinity-blackhole/python-root-commit/issues"
Source = "https://github.com/infinity-blackhole/python-root-commit"

[tool.hatch.version]
path = "sfeir/hivemind/__about__.py"

[tool.hatch.envs.default]
dependencies = ["pytest", "pytest-cov"]

[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=sfeir_hivemind --cov=tests {args}"
no-cov = "cov --no-cov {args}"

[[tool.hatch.envs.test.matrix]]
python = ["38", "39", "310", "311"]

[tool.coverage.run]
branch = true
parallel = true
omit = ["sfeir/hivemind/__about__.py"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.isort]
profile = "black"
